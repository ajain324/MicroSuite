// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lookup.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lookup_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lookup_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lookup_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lookup_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lookup_2eproto;
namespace lookup {
class Key;
class KeyDefaultTypeInternal;
extern KeyDefaultTypeInternal _Key_default_instance_;
class TimingDataInMicro;
class TimingDataInMicroDefaultTypeInternal;
extern TimingDataInMicroDefaultTypeInternal _TimingDataInMicro_default_instance_;
class UtilRequest;
class UtilRequestDefaultTypeInternal;
extern UtilRequestDefaultTypeInternal _UtilRequest_default_instance_;
class UtilResponse;
class UtilResponseDefaultTypeInternal;
extern UtilResponseDefaultTypeInternal _UtilResponse_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace lookup
PROTOBUF_NAMESPACE_OPEN
template<> ::lookup::Key* Arena::CreateMaybeMessage<::lookup::Key>(Arena*);
template<> ::lookup::TimingDataInMicro* Arena::CreateMaybeMessage<::lookup::TimingDataInMicro>(Arena*);
template<> ::lookup::UtilRequest* Arena::CreateMaybeMessage<::lookup::UtilRequest>(Arena*);
template<> ::lookup::UtilResponse* Arena::CreateMaybeMessage<::lookup::UtilResponse>(Arena*);
template<> ::lookup::Value* Arena::CreateMaybeMessage<::lookup::Value>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace lookup {

// ===================================================================

class UtilRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lookup.UtilRequest) */ {
 public:
  UtilRequest();
  virtual ~UtilRequest();

  UtilRequest(const UtilRequest& from);
  UtilRequest(UtilRequest&& from) noexcept
    : UtilRequest() {
    *this = ::std::move(from);
  }

  inline UtilRequest& operator=(const UtilRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UtilRequest& operator=(UtilRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UtilRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UtilRequest* internal_default_instance() {
    return reinterpret_cast<const UtilRequest*>(
               &_UtilRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UtilRequest& a, UtilRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UtilRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UtilRequest* New() const final {
    return CreateMaybeMessage<UtilRequest>(nullptr);
  }

  UtilRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UtilRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UtilRequest& from);
  void MergeFrom(const UtilRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UtilRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lookup.UtilRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lookup_2eproto);
    return ::descriptor_table_lookup_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUtilRequestFieldNumber = 1,
  };
  // bool util_request = 1;
  void clear_util_request();
  bool util_request() const;
  void set_util_request(bool value);
  private:
  bool _internal_util_request() const;
  void _internal_set_util_request(bool value);
  public:

  // @@protoc_insertion_point(class_scope:lookup.UtilRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool util_request_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lookup_2eproto;
};
// -------------------------------------------------------------------

class Key :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lookup.Key) */ {
 public:
  Key();
  virtual ~Key();

  Key(const Key& from);
  Key(Key&& from) noexcept
    : Key() {
    *this = ::std::move(from);
  }

  inline Key& operator=(const Key& from) {
    CopyFrom(from);
    return *this;
  }
  inline Key& operator=(Key&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Key& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Key* internal_default_instance() {
    return reinterpret_cast<const Key*>(
               &_Key_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Key& a, Key& b) {
    a.Swap(&b);
  }
  inline void Swap(Key* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Key* New() const final {
    return CreateMaybeMessage<Key>(nullptr);
  }

  Key* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Key>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Key& from);
  void MergeFrom(const Key& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Key* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lookup.Key";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lookup_2eproto);
    return ::descriptor_table_lookup_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kValueFieldNumber = 3,
    kUtilRequestFieldNumber = 4,
    kOperationFieldNumber = 1,
    kLookupServerIdFieldNumber = 7,
    kRequestIdFieldNumber = 5,
    kIndexViewFieldNumber = 6,
  };
  // string key = 2;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // string value = 3;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // .lookup.UtilRequest util_request = 4;
  bool has_util_request() const;
  private:
  bool _internal_has_util_request() const;
  public:
  void clear_util_request();
  const ::lookup::UtilRequest& util_request() const;
  ::lookup::UtilRequest* release_util_request();
  ::lookup::UtilRequest* mutable_util_request();
  void set_allocated_util_request(::lookup::UtilRequest* util_request);
  private:
  const ::lookup::UtilRequest& _internal_util_request() const;
  ::lookup::UtilRequest* _internal_mutable_util_request();
  public:

  // uint32 operation = 1;
  void clear_operation();
  ::PROTOBUF_NAMESPACE_ID::uint32 operation() const;
  void set_operation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_operation() const;
  void _internal_set_operation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 lookup_server_id = 7;
  void clear_lookup_server_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 lookup_server_id() const;
  void set_lookup_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lookup_server_id() const;
  void _internal_set_lookup_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 request_id = 5;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 index_view = 6;
  void clear_index_view();
  ::PROTOBUF_NAMESPACE_ID::uint64 index_view() const;
  void set_index_view(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_index_view() const;
  void _internal_set_index_view(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:lookup.Key)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::lookup::UtilRequest* util_request_;
  ::PROTOBUF_NAMESPACE_ID::uint32 operation_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lookup_server_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 index_view_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lookup_2eproto;
};
// -------------------------------------------------------------------

class TimingDataInMicro :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lookup.TimingDataInMicro) */ {
 public:
  TimingDataInMicro();
  virtual ~TimingDataInMicro();

  TimingDataInMicro(const TimingDataInMicro& from);
  TimingDataInMicro(TimingDataInMicro&& from) noexcept
    : TimingDataInMicro() {
    *this = ::std::move(from);
  }

  inline TimingDataInMicro& operator=(const TimingDataInMicro& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimingDataInMicro& operator=(TimingDataInMicro&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TimingDataInMicro& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimingDataInMicro* internal_default_instance() {
    return reinterpret_cast<const TimingDataInMicro*>(
               &_TimingDataInMicro_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TimingDataInMicro& a, TimingDataInMicro& b) {
    a.Swap(&b);
  }
  inline void Swap(TimingDataInMicro* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimingDataInMicro* New() const final {
    return CreateMaybeMessage<TimingDataInMicro>(nullptr);
  }

  TimingDataInMicro* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimingDataInMicro>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimingDataInMicro& from);
  void MergeFrom(const TimingDataInMicro& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimingDataInMicro* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lookup.TimingDataInMicro";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lookup_2eproto);
    return ::descriptor_table_lookup_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnpackLookupSrvReqTimeInMicroFieldNumber = 1,
    kLookupSrvTimeInMicroFieldNumber = 2,
    kPackLookupSrvRespTimeInMicroFieldNumber = 3,
    kCpuUtilFieldNumber = 4,
  };
  // uint64 unpack_lookup_srv_req_time_in_micro = 1;
  void clear_unpack_lookup_srv_req_time_in_micro();
  ::PROTOBUF_NAMESPACE_ID::uint64 unpack_lookup_srv_req_time_in_micro() const;
  void set_unpack_lookup_srv_req_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_unpack_lookup_srv_req_time_in_micro() const;
  void _internal_set_unpack_lookup_srv_req_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 lookup_srv_time_in_micro = 2;
  void clear_lookup_srv_time_in_micro();
  ::PROTOBUF_NAMESPACE_ID::uint64 lookup_srv_time_in_micro() const;
  void set_lookup_srv_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lookup_srv_time_in_micro() const;
  void _internal_set_lookup_srv_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pack_lookup_srv_resp_time_in_micro = 3;
  void clear_pack_lookup_srv_resp_time_in_micro();
  ::PROTOBUF_NAMESPACE_ID::uint64 pack_lookup_srv_resp_time_in_micro() const;
  void set_pack_lookup_srv_resp_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pack_lookup_srv_resp_time_in_micro() const;
  void _internal_set_pack_lookup_srv_resp_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float cpu_util = 4;
  void clear_cpu_util();
  float cpu_util() const;
  void set_cpu_util(float value);
  private:
  float _internal_cpu_util() const;
  void _internal_set_cpu_util(float value);
  public:

  // @@protoc_insertion_point(class_scope:lookup.TimingDataInMicro)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 unpack_lookup_srv_req_time_in_micro_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lookup_srv_time_in_micro_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pack_lookup_srv_resp_time_in_micro_;
  float cpu_util_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lookup_2eproto;
};
// -------------------------------------------------------------------

class UtilResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lookup.UtilResponse) */ {
 public:
  UtilResponse();
  virtual ~UtilResponse();

  UtilResponse(const UtilResponse& from);
  UtilResponse(UtilResponse&& from) noexcept
    : UtilResponse() {
    *this = ::std::move(from);
  }

  inline UtilResponse& operator=(const UtilResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UtilResponse& operator=(UtilResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UtilResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UtilResponse* internal_default_instance() {
    return reinterpret_cast<const UtilResponse*>(
               &_UtilResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UtilResponse& a, UtilResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UtilResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UtilResponse* New() const final {
    return CreateMaybeMessage<UtilResponse>(nullptr);
  }

  UtilResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UtilResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UtilResponse& from);
  void MergeFrom(const UtilResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UtilResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lookup.UtilResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lookup_2eproto);
    return ::descriptor_table_lookup_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserTimeFieldNumber = 2,
    kSystemTimeFieldNumber = 3,
    kIoTimeFieldNumber = 4,
    kIdleTimeFieldNumber = 5,
    kUtilPresentFieldNumber = 1,
  };
  // uint64 user_time = 2;
  void clear_user_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 user_time() const;
  void set_user_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_user_time() const;
  void _internal_set_user_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 system_time = 3;
  void clear_system_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 system_time() const;
  void set_system_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_system_time() const;
  void _internal_set_system_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 io_time = 4;
  void clear_io_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 io_time() const;
  void set_io_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_io_time() const;
  void _internal_set_io_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 idle_time = 5;
  void clear_idle_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 idle_time() const;
  void set_idle_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_idle_time() const;
  void _internal_set_idle_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool util_present = 1;
  void clear_util_present();
  bool util_present() const;
  void set_util_present(bool value);
  private:
  bool _internal_util_present() const;
  void _internal_set_util_present(bool value);
  public:

  // @@protoc_insertion_point(class_scope:lookup.UtilResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 user_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 system_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 io_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 idle_time_;
  bool util_present_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lookup_2eproto;
};
// -------------------------------------------------------------------

class Value :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lookup.Value) */ {
 public:
  Value();
  virtual ~Value();

  Value(const Value& from);
  Value(Value&& from) noexcept
    : Value() {
    *this = ::std::move(from);
  }

  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }
  inline Value& operator=(Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Value& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value* internal_default_instance() {
    return reinterpret_cast<const Value*>(
               &_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Value& a, Value& b) {
    a.Swap(&b);
  }
  inline void Swap(Value* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Value* New() const final {
    return CreateMaybeMessage<Value>(nullptr);
  }

  Value* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Value>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Value& from);
  void MergeFrom(const Value& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lookup.Value";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lookup_2eproto);
    return ::descriptor_table_lookup_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kTimingDataInMicroFieldNumber = 2,
    kUtilResponseFieldNumber = 3,
    kRequestIdFieldNumber = 4,
    kRecvStampFieldNumber = 5,
    kSendStampFieldNumber = 6,
    kIndexViewFieldNumber = 7,
    kBucketServerIdFieldNumber = 8,
  };
  // string value = 1;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // .lookup.TimingDataInMicro timing_data_in_micro = 2;
  bool has_timing_data_in_micro() const;
  private:
  bool _internal_has_timing_data_in_micro() const;
  public:
  void clear_timing_data_in_micro();
  const ::lookup::TimingDataInMicro& timing_data_in_micro() const;
  ::lookup::TimingDataInMicro* release_timing_data_in_micro();
  ::lookup::TimingDataInMicro* mutable_timing_data_in_micro();
  void set_allocated_timing_data_in_micro(::lookup::TimingDataInMicro* timing_data_in_micro);
  private:
  const ::lookup::TimingDataInMicro& _internal_timing_data_in_micro() const;
  ::lookup::TimingDataInMicro* _internal_mutable_timing_data_in_micro();
  public:

  // .lookup.UtilResponse util_response = 3;
  bool has_util_response() const;
  private:
  bool _internal_has_util_response() const;
  public:
  void clear_util_response();
  const ::lookup::UtilResponse& util_response() const;
  ::lookup::UtilResponse* release_util_response();
  ::lookup::UtilResponse* mutable_util_response();
  void set_allocated_util_response(::lookup::UtilResponse* util_response);
  private:
  const ::lookup::UtilResponse& _internal_util_response() const;
  ::lookup::UtilResponse* _internal_mutable_util_response();
  public:

  // uint64 request_id = 4;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 recv_stamp = 5;
  void clear_recv_stamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 recv_stamp() const;
  void set_recv_stamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_recv_stamp() const;
  void _internal_set_recv_stamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 send_stamp = 6;
  void clear_send_stamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 send_stamp() const;
  void set_send_stamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_send_stamp() const;
  void _internal_set_send_stamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 index_view = 7;
  void clear_index_view();
  ::PROTOBUF_NAMESPACE_ID::uint64 index_view() const;
  void set_index_view(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_index_view() const;
  void _internal_set_index_view(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 bucket_server_id = 8;
  void clear_bucket_server_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 bucket_server_id() const;
  void set_bucket_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bucket_server_id() const;
  void _internal_set_bucket_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:lookup.Value)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::lookup::TimingDataInMicro* timing_data_in_micro_;
  ::lookup::UtilResponse* util_response_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 recv_stamp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 send_stamp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 index_view_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bucket_server_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lookup_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UtilRequest

// bool util_request = 1;
inline void UtilRequest::clear_util_request() {
  util_request_ = false;
}
inline bool UtilRequest::_internal_util_request() const {
  return util_request_;
}
inline bool UtilRequest::util_request() const {
  // @@protoc_insertion_point(field_get:lookup.UtilRequest.util_request)
  return _internal_util_request();
}
inline void UtilRequest::_internal_set_util_request(bool value) {
  
  util_request_ = value;
}
inline void UtilRequest::set_util_request(bool value) {
  _internal_set_util_request(value);
  // @@protoc_insertion_point(field_set:lookup.UtilRequest.util_request)
}

// -------------------------------------------------------------------

// Key

// uint32 operation = 1;
inline void Key::clear_operation() {
  operation_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Key::_internal_operation() const {
  return operation_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Key::operation() const {
  // @@protoc_insertion_point(field_get:lookup.Key.operation)
  return _internal_operation();
}
inline void Key::_internal_set_operation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  operation_ = value;
}
inline void Key::set_operation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_operation(value);
  // @@protoc_insertion_point(field_set:lookup.Key.operation)
}

// string key = 2;
inline void Key::clear_key() {
  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Key::key() const {
  // @@protoc_insertion_point(field_get:lookup.Key.key)
  return _internal_key();
}
inline void Key::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:lookup.Key.key)
}
inline std::string* Key::mutable_key() {
  // @@protoc_insertion_point(field_mutable:lookup.Key.key)
  return _internal_mutable_key();
}
inline const std::string& Key::_internal_key() const {
  return key_.GetNoArena();
}
inline void Key::_internal_set_key(const std::string& value) {
  
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Key::set_key(std::string&& value) {
  
  key_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lookup.Key.key)
}
inline void Key::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lookup.Key.key)
}
inline void Key::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lookup.Key.key)
}
inline std::string* Key::_internal_mutable_key() {
  
  return key_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Key::release_key() {
  // @@protoc_insertion_point(field_release:lookup.Key.key)
  
  return key_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Key::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:lookup.Key.key)
}

// string value = 3;
inline void Key::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Key::value() const {
  // @@protoc_insertion_point(field_get:lookup.Key.value)
  return _internal_value();
}
inline void Key::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:lookup.Key.value)
}
inline std::string* Key::mutable_value() {
  // @@protoc_insertion_point(field_mutable:lookup.Key.value)
  return _internal_mutable_value();
}
inline const std::string& Key::_internal_value() const {
  return value_.GetNoArena();
}
inline void Key::_internal_set_value(const std::string& value) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Key::set_value(std::string&& value) {
  
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lookup.Key.value)
}
inline void Key::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lookup.Key.value)
}
inline void Key::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lookup.Key.value)
}
inline std::string* Key::_internal_mutable_value() {
  
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Key::release_value() {
  // @@protoc_insertion_point(field_release:lookup.Key.value)
  
  return value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Key::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:lookup.Key.value)
}

// .lookup.UtilRequest util_request = 4;
inline bool Key::_internal_has_util_request() const {
  return this != internal_default_instance() && util_request_ != nullptr;
}
inline bool Key::has_util_request() const {
  return _internal_has_util_request();
}
inline void Key::clear_util_request() {
  if (GetArenaNoVirtual() == nullptr && util_request_ != nullptr) {
    delete util_request_;
  }
  util_request_ = nullptr;
}
inline const ::lookup::UtilRequest& Key::_internal_util_request() const {
  const ::lookup::UtilRequest* p = util_request_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lookup::UtilRequest*>(
      &::lookup::_UtilRequest_default_instance_);
}
inline const ::lookup::UtilRequest& Key::util_request() const {
  // @@protoc_insertion_point(field_get:lookup.Key.util_request)
  return _internal_util_request();
}
inline ::lookup::UtilRequest* Key::release_util_request() {
  // @@protoc_insertion_point(field_release:lookup.Key.util_request)
  
  ::lookup::UtilRequest* temp = util_request_;
  util_request_ = nullptr;
  return temp;
}
inline ::lookup::UtilRequest* Key::_internal_mutable_util_request() {
  
  if (util_request_ == nullptr) {
    auto* p = CreateMaybeMessage<::lookup::UtilRequest>(GetArenaNoVirtual());
    util_request_ = p;
  }
  return util_request_;
}
inline ::lookup::UtilRequest* Key::mutable_util_request() {
  // @@protoc_insertion_point(field_mutable:lookup.Key.util_request)
  return _internal_mutable_util_request();
}
inline void Key::set_allocated_util_request(::lookup::UtilRequest* util_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete util_request_;
  }
  if (util_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      util_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, util_request, submessage_arena);
    }
    
  } else {
    
  }
  util_request_ = util_request;
  // @@protoc_insertion_point(field_set_allocated:lookup.Key.util_request)
}

// uint64 request_id = 5;
inline void Key::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Key::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Key::request_id() const {
  // @@protoc_insertion_point(field_get:lookup.Key.request_id)
  return _internal_request_id();
}
inline void Key::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void Key::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:lookup.Key.request_id)
}

// uint64 index_view = 6;
inline void Key::clear_index_view() {
  index_view_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Key::_internal_index_view() const {
  return index_view_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Key::index_view() const {
  // @@protoc_insertion_point(field_get:lookup.Key.index_view)
  return _internal_index_view();
}
inline void Key::_internal_set_index_view(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  index_view_ = value;
}
inline void Key::set_index_view(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_index_view(value);
  // @@protoc_insertion_point(field_set:lookup.Key.index_view)
}

// uint32 lookup_server_id = 7;
inline void Key::clear_lookup_server_id() {
  lookup_server_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Key::_internal_lookup_server_id() const {
  return lookup_server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Key::lookup_server_id() const {
  // @@protoc_insertion_point(field_get:lookup.Key.lookup_server_id)
  return _internal_lookup_server_id();
}
inline void Key::_internal_set_lookup_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lookup_server_id_ = value;
}
inline void Key::set_lookup_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lookup_server_id(value);
  // @@protoc_insertion_point(field_set:lookup.Key.lookup_server_id)
}

// -------------------------------------------------------------------

// TimingDataInMicro

// uint64 unpack_lookup_srv_req_time_in_micro = 1;
inline void TimingDataInMicro::clear_unpack_lookup_srv_req_time_in_micro() {
  unpack_lookup_srv_req_time_in_micro_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TimingDataInMicro::_internal_unpack_lookup_srv_req_time_in_micro() const {
  return unpack_lookup_srv_req_time_in_micro_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TimingDataInMicro::unpack_lookup_srv_req_time_in_micro() const {
  // @@protoc_insertion_point(field_get:lookup.TimingDataInMicro.unpack_lookup_srv_req_time_in_micro)
  return _internal_unpack_lookup_srv_req_time_in_micro();
}
inline void TimingDataInMicro::_internal_set_unpack_lookup_srv_req_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  unpack_lookup_srv_req_time_in_micro_ = value;
}
inline void TimingDataInMicro::set_unpack_lookup_srv_req_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_unpack_lookup_srv_req_time_in_micro(value);
  // @@protoc_insertion_point(field_set:lookup.TimingDataInMicro.unpack_lookup_srv_req_time_in_micro)
}

// uint64 lookup_srv_time_in_micro = 2;
inline void TimingDataInMicro::clear_lookup_srv_time_in_micro() {
  lookup_srv_time_in_micro_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TimingDataInMicro::_internal_lookup_srv_time_in_micro() const {
  return lookup_srv_time_in_micro_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TimingDataInMicro::lookup_srv_time_in_micro() const {
  // @@protoc_insertion_point(field_get:lookup.TimingDataInMicro.lookup_srv_time_in_micro)
  return _internal_lookup_srv_time_in_micro();
}
inline void TimingDataInMicro::_internal_set_lookup_srv_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  lookup_srv_time_in_micro_ = value;
}
inline void TimingDataInMicro::set_lookup_srv_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lookup_srv_time_in_micro(value);
  // @@protoc_insertion_point(field_set:lookup.TimingDataInMicro.lookup_srv_time_in_micro)
}

// uint64 pack_lookup_srv_resp_time_in_micro = 3;
inline void TimingDataInMicro::clear_pack_lookup_srv_resp_time_in_micro() {
  pack_lookup_srv_resp_time_in_micro_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TimingDataInMicro::_internal_pack_lookup_srv_resp_time_in_micro() const {
  return pack_lookup_srv_resp_time_in_micro_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TimingDataInMicro::pack_lookup_srv_resp_time_in_micro() const {
  // @@protoc_insertion_point(field_get:lookup.TimingDataInMicro.pack_lookup_srv_resp_time_in_micro)
  return _internal_pack_lookup_srv_resp_time_in_micro();
}
inline void TimingDataInMicro::_internal_set_pack_lookup_srv_resp_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pack_lookup_srv_resp_time_in_micro_ = value;
}
inline void TimingDataInMicro::set_pack_lookup_srv_resp_time_in_micro(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pack_lookup_srv_resp_time_in_micro(value);
  // @@protoc_insertion_point(field_set:lookup.TimingDataInMicro.pack_lookup_srv_resp_time_in_micro)
}

// float cpu_util = 4;
inline void TimingDataInMicro::clear_cpu_util() {
  cpu_util_ = 0;
}
inline float TimingDataInMicro::_internal_cpu_util() const {
  return cpu_util_;
}
inline float TimingDataInMicro::cpu_util() const {
  // @@protoc_insertion_point(field_get:lookup.TimingDataInMicro.cpu_util)
  return _internal_cpu_util();
}
inline void TimingDataInMicro::_internal_set_cpu_util(float value) {
  
  cpu_util_ = value;
}
inline void TimingDataInMicro::set_cpu_util(float value) {
  _internal_set_cpu_util(value);
  // @@protoc_insertion_point(field_set:lookup.TimingDataInMicro.cpu_util)
}

// -------------------------------------------------------------------

// UtilResponse

// bool util_present = 1;
inline void UtilResponse::clear_util_present() {
  util_present_ = false;
}
inline bool UtilResponse::_internal_util_present() const {
  return util_present_;
}
inline bool UtilResponse::util_present() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.util_present)
  return _internal_util_present();
}
inline void UtilResponse::_internal_set_util_present(bool value) {
  
  util_present_ = value;
}
inline void UtilResponse::set_util_present(bool value) {
  _internal_set_util_present(value);
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.util_present)
}

// uint64 user_time = 2;
inline void UtilResponse::clear_user_time() {
  user_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UtilResponse::_internal_user_time() const {
  return user_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UtilResponse::user_time() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.user_time)
  return _internal_user_time();
}
inline void UtilResponse::_internal_set_user_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  user_time_ = value;
}
inline void UtilResponse::set_user_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_user_time(value);
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.user_time)
}

// uint64 system_time = 3;
inline void UtilResponse::clear_system_time() {
  system_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UtilResponse::_internal_system_time() const {
  return system_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UtilResponse::system_time() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.system_time)
  return _internal_system_time();
}
inline void UtilResponse::_internal_set_system_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  system_time_ = value;
}
inline void UtilResponse::set_system_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_system_time(value);
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.system_time)
}

// uint64 io_time = 4;
inline void UtilResponse::clear_io_time() {
  io_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UtilResponse::_internal_io_time() const {
  return io_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UtilResponse::io_time() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.io_time)
  return _internal_io_time();
}
inline void UtilResponse::_internal_set_io_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  io_time_ = value;
}
inline void UtilResponse::set_io_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_io_time(value);
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.io_time)
}

// uint64 idle_time = 5;
inline void UtilResponse::clear_idle_time() {
  idle_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UtilResponse::_internal_idle_time() const {
  return idle_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UtilResponse::idle_time() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.idle_time)
  return _internal_idle_time();
}
inline void UtilResponse::_internal_set_idle_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  idle_time_ = value;
}
inline void UtilResponse::set_idle_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_idle_time(value);
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.idle_time)
}

// -------------------------------------------------------------------

// Value

// string value = 1;
inline void Value::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Value::value() const {
  // @@protoc_insertion_point(field_get:lookup.Value.value)
  return _internal_value();
}
inline void Value::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:lookup.Value.value)
}
inline std::string* Value::mutable_value() {
  // @@protoc_insertion_point(field_mutable:lookup.Value.value)
  return _internal_mutable_value();
}
inline const std::string& Value::_internal_value() const {
  return value_.GetNoArena();
}
inline void Value::_internal_set_value(const std::string& value) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Value::set_value(std::string&& value) {
  
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lookup.Value.value)
}
inline void Value::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lookup.Value.value)
}
inline void Value::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lookup.Value.value)
}
inline std::string* Value::_internal_mutable_value() {
  
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Value::release_value() {
  // @@protoc_insertion_point(field_release:lookup.Value.value)
  
  return value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:lookup.Value.value)
}

// .lookup.TimingDataInMicro timing_data_in_micro = 2;
inline bool Value::_internal_has_timing_data_in_micro() const {
  return this != internal_default_instance() && timing_data_in_micro_ != nullptr;
}
inline bool Value::has_timing_data_in_micro() const {
  return _internal_has_timing_data_in_micro();
}
inline void Value::clear_timing_data_in_micro() {
  if (GetArenaNoVirtual() == nullptr && timing_data_in_micro_ != nullptr) {
    delete timing_data_in_micro_;
  }
  timing_data_in_micro_ = nullptr;
}
inline const ::lookup::TimingDataInMicro& Value::_internal_timing_data_in_micro() const {
  const ::lookup::TimingDataInMicro* p = timing_data_in_micro_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lookup::TimingDataInMicro*>(
      &::lookup::_TimingDataInMicro_default_instance_);
}
inline const ::lookup::TimingDataInMicro& Value::timing_data_in_micro() const {
  // @@protoc_insertion_point(field_get:lookup.Value.timing_data_in_micro)
  return _internal_timing_data_in_micro();
}
inline ::lookup::TimingDataInMicro* Value::release_timing_data_in_micro() {
  // @@protoc_insertion_point(field_release:lookup.Value.timing_data_in_micro)
  
  ::lookup::TimingDataInMicro* temp = timing_data_in_micro_;
  timing_data_in_micro_ = nullptr;
  return temp;
}
inline ::lookup::TimingDataInMicro* Value::_internal_mutable_timing_data_in_micro() {
  
  if (timing_data_in_micro_ == nullptr) {
    auto* p = CreateMaybeMessage<::lookup::TimingDataInMicro>(GetArenaNoVirtual());
    timing_data_in_micro_ = p;
  }
  return timing_data_in_micro_;
}
inline ::lookup::TimingDataInMicro* Value::mutable_timing_data_in_micro() {
  // @@protoc_insertion_point(field_mutable:lookup.Value.timing_data_in_micro)
  return _internal_mutable_timing_data_in_micro();
}
inline void Value::set_allocated_timing_data_in_micro(::lookup::TimingDataInMicro* timing_data_in_micro) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete timing_data_in_micro_;
  }
  if (timing_data_in_micro) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      timing_data_in_micro = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timing_data_in_micro, submessage_arena);
    }
    
  } else {
    
  }
  timing_data_in_micro_ = timing_data_in_micro;
  // @@protoc_insertion_point(field_set_allocated:lookup.Value.timing_data_in_micro)
}

// .lookup.UtilResponse util_response = 3;
inline bool Value::_internal_has_util_response() const {
  return this != internal_default_instance() && util_response_ != nullptr;
}
inline bool Value::has_util_response() const {
  return _internal_has_util_response();
}
inline void Value::clear_util_response() {
  if (GetArenaNoVirtual() == nullptr && util_response_ != nullptr) {
    delete util_response_;
  }
  util_response_ = nullptr;
}
inline const ::lookup::UtilResponse& Value::_internal_util_response() const {
  const ::lookup::UtilResponse* p = util_response_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lookup::UtilResponse*>(
      &::lookup::_UtilResponse_default_instance_);
}
inline const ::lookup::UtilResponse& Value::util_response() const {
  // @@protoc_insertion_point(field_get:lookup.Value.util_response)
  return _internal_util_response();
}
inline ::lookup::UtilResponse* Value::release_util_response() {
  // @@protoc_insertion_point(field_release:lookup.Value.util_response)
  
  ::lookup::UtilResponse* temp = util_response_;
  util_response_ = nullptr;
  return temp;
}
inline ::lookup::UtilResponse* Value::_internal_mutable_util_response() {
  
  if (util_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::lookup::UtilResponse>(GetArenaNoVirtual());
    util_response_ = p;
  }
  return util_response_;
}
inline ::lookup::UtilResponse* Value::mutable_util_response() {
  // @@protoc_insertion_point(field_mutable:lookup.Value.util_response)
  return _internal_mutable_util_response();
}
inline void Value::set_allocated_util_response(::lookup::UtilResponse* util_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete util_response_;
  }
  if (util_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      util_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, util_response, submessage_arena);
    }
    
  } else {
    
  }
  util_response_ = util_response;
  // @@protoc_insertion_point(field_set_allocated:lookup.Value.util_response)
}

// uint64 request_id = 4;
inline void Value::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Value::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Value::request_id() const {
  // @@protoc_insertion_point(field_get:lookup.Value.request_id)
  return _internal_request_id();
}
inline void Value::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void Value::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:lookup.Value.request_id)
}

// uint64 recv_stamp = 5;
inline void Value::clear_recv_stamp() {
  recv_stamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Value::_internal_recv_stamp() const {
  return recv_stamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Value::recv_stamp() const {
  // @@protoc_insertion_point(field_get:lookup.Value.recv_stamp)
  return _internal_recv_stamp();
}
inline void Value::_internal_set_recv_stamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  recv_stamp_ = value;
}
inline void Value::set_recv_stamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_recv_stamp(value);
  // @@protoc_insertion_point(field_set:lookup.Value.recv_stamp)
}

// uint64 send_stamp = 6;
inline void Value::clear_send_stamp() {
  send_stamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Value::_internal_send_stamp() const {
  return send_stamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Value::send_stamp() const {
  // @@protoc_insertion_point(field_get:lookup.Value.send_stamp)
  return _internal_send_stamp();
}
inline void Value::_internal_set_send_stamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  send_stamp_ = value;
}
inline void Value::set_send_stamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_send_stamp(value);
  // @@protoc_insertion_point(field_set:lookup.Value.send_stamp)
}

// uint64 index_view = 7;
inline void Value::clear_index_view() {
  index_view_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Value::_internal_index_view() const {
  return index_view_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Value::index_view() const {
  // @@protoc_insertion_point(field_get:lookup.Value.index_view)
  return _internal_index_view();
}
inline void Value::_internal_set_index_view(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  index_view_ = value;
}
inline void Value::set_index_view(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_index_view(value);
  // @@protoc_insertion_point(field_set:lookup.Value.index_view)
}

// uint32 bucket_server_id = 8;
inline void Value::clear_bucket_server_id() {
  bucket_server_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Value::_internal_bucket_server_id() const {
  return bucket_server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Value::bucket_server_id() const {
  // @@protoc_insertion_point(field_get:lookup.Value.bucket_server_id)
  return _internal_bucket_server_id();
}
inline void Value::_internal_set_bucket_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bucket_server_id_ = value;
}
inline void Value::set_bucket_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bucket_server_id(value);
  // @@protoc_insertion_point(field_set:lookup.Value.bucket_server_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lookup

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lookup_2eproto
